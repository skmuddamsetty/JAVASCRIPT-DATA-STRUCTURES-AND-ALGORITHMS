Given two strings A and B, find the minimum number of times A * has to be repeated such that B is a substring of it.
If no * such solution, return -1.
For example, with A = "abcd" and B = "cdabcdab".
Return 3, because by repeating A three times (“abcdabcdabcd”), B * is a substring of it; and B is not a substring of A repeated two * times ("abcdabcd").
https://leetcode.com/problems/repeated-string-match/submissions/
https://www.youtube.com/watch?v=c8cH8jejvBk